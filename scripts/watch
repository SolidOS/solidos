#!/bin/bash

unset PREFIX npm_config_prefix
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

nvm use --delete-prefix

npx lerna bootstrap --force-local

declare -a packageNames=(
  "rdflib"
  "solid-logic"
  "pane-registry"
  "solid-ui"
  "solid-panes"
  "mashlib"
  "node-solid-server"
  )

# Via https://zaiste.net/posts/how-to-join-elements-of-array-bash/
function join { local IFS="$1"; shift; echo "$*"; }

# Build the string of package names for use by concurrently
packageNamesString=$(join ,  ${packageNames[@]})

# Concurrently start a `watch` task for solid-ui, solid-panes, and mashlib, and start Node Solid Server.
# Note that mashlib chokes if the watch task of solid-panes is still starting up while it's running;
# a hacky workaround to that is to delay it by 20 seconds before starting (`sleep 20`).
packageCommands=()
for package in "${packageNames[@]}"
do
  command="npm run watch"
  if [[ "$package" == "mashlib" ]]; then
      command="sleep 20 && $command"
  elif [[ "$package" == "node-solid-server" ]]; then
      command="--root ./data --port 8443 --ssl-key ../privkey.pem --ssl-cert ../fullchain.pem"
  fi
  # command="echo '---' && pwd && echo '---'"

  command=". $HOME/.nvm/nvm.sh; cd workspaces/$package; nvm use --delete-prefix; $command"
  packageCommands+=("$command")
done

npx concurrently --names "$packageNamesString" "${packageCommands[@]}"
